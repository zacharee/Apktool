/**
 *  Copyright 2014 Ryszard Wiśniewski <brut.alll@gmail.com>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
buildscript {
    ext.kotlin_version = '1.4.21'
    repositories {
        jcenter()
        google()
    }
    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.0.0-alpha03'
        classpath 'com.github.jengelman.gradle.plugins:shadow:6.1.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id 'com.github.hierynomus.license' version '0.15.0'
}

apply from: 'gradle/functions.gradle'

def apktoolversion_major = '2.5.1'
def apktoolversion_minor = 'SNAPSHOT'

defaultTasks 'build', 'shadowJar', 'proguard'

allprojects {
    apply plugin: 'license'

    repositories {
        google()
        jcenter()
    }

    license {
        header rootProject.file("brut.j.common/src/templates/apache2.0-header.txt")
        exclude "**/android/content/res/*.java"
        exclude "**/android/util/*.java"
        include "**/*.java"
        mapping {
            java = 'SLASHSTAR_STYLE'
        }
        strictCheck true

        ext.year = '2010'
        ext.brut = 'Ryszard Wiśniewski'
        ext.brutEmail = 'brut.alll@gmail.com'
        ext.ibot = 'Connor Tumbleson'
        ext.ibotEmail = 'connor.tumbleson@gmail.com'
    }

    tasks.withType(JavaCompile) {
        options.compilerArgs += ["-Xlint:-options"]
    }

    // license plugin automatically fires these tasks, disable them and run them during releases
//    gradle.startParameter.excludedTaskNames += "licenseMain"
//    gradle.startParameter.excludedTaskNames += "licenseTest"
}

if (!('release' in gradle.startParameter.taskNames)) {
    def hash = getCheckedOutGitCommitHash();

    if (hash == null) {
        project.ext.set("hash", "dirty")
        project.ext.set("apktool_version", apktoolversion_major + "-dirty")
        println "Building SNAPSHOT (no .git folder found)";
    } else {
        project.ext.set("hash", hash);
        project.ext.set("apktool_version", apktoolversion_major + "-" + hash + "-SNAPSHOT");
        println "Building SNAPSHOT (" + getCheckedOutBranch() + "): " + hash;
    }
} else {
    project.ext.set("hash", "")
    if (apktoolversion_minor.length() > 0) {
        project.ext.set("apktool_version", apktoolversion_major + "-" + apktoolversion_minor);
    } else {
        project.ext.set("apktool_version", apktoolversion_major);
    }
    println "Building RELEASE (" + getCheckedOutBranch() + "): " + project.ext.apktool_version;
}

// used for official releases only. Please don't use
task release {
}

subprojects {
    ext {
        depends = [
                baksmali: 'org.smali:baksmali:2.4.0',
                commons_cli: 'commons-cli:commons-cli:1.4',
                commons_io: 'commons-io:commons-io:2.4',
                commons_lang: 'org.apache.commons:commons-lang3:3.1',
                guava: 'com.google.guava:guava:14.0',
                junit: 'junit:junit:4.12',
                proguard_gradle: 'com.guardsquare:proguard-gradle:7.0.0',
                snakeyaml: 'org.yaml:snakeyaml:1.18:android',
                smali: 'org.smali:smali:2.4.0',
                xmlpull: 'xpp3:xpp3:1.1.4c',
                xmlunit: 'xmlunit:xmlunit:1.6',
        ]
    }

    repositories {
        mavenCentral()
    }
}
